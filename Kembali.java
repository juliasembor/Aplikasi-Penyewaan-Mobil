/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


package rentalkendaraan;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JTable;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author 
 */
public class Kembali extends javax.swing.JFrame {
    public Connection conn;
    public Statement cn;
int subTotal;
    String user="root";
        String pswd ="";
        String host="localhost";
        String db="rentalkendaraan";
        String url="";
        private Connection Lconnection=null;

    public Kembali() {
        initComponents();
        try {

            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://"+ host +"/"+ db + "?user=" + user + "&password="+ pswd;

            Lconnection=DriverManager.getConnection(url);
        }

        catch(ClassNotFoundException e) {
            System.out.println("Driver tidak ditemukan");
        }

        catch (SQLException e){
            System.out.println("koneksi gagal:" +
                 e.toString());
        }

    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        kode = new javax.swing.JTextField();
        kode3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        kode2 = new javax.swing.JLabel();
        nama = new javax.swing.JLabel();
        alamat = new javax.swing.JLabel();
        carimember = new javax.swing.JButton();
        menuutama = new javax.swing.JButton();
        tabelsewa = new javax.swing.JScrollPane();
        carikendaraan = new javax.swing.JButton();
        tabelsewa2 = new javax.swing.JScrollPane();
        tabelmember = new javax.swing.JButton();
        simpan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("KODE MEMBER");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("KODE KENDARAAN YANG DISEWA");

        kode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 51)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("KODE");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("NAMA");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("ALAMAT");

        kode2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        kode2.setText("...................................");

        nama.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nama.setText(".......................");

        alamat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        alamat.setText(".......................");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)))
                .addGap(273, 273, 273)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(nama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alamat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kode2, 0, 1, Short.MAX_VALUE))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kode2)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nama))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(alamat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        carimember.setText("CARI");
        carimember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carimemberActionPerformed(evt);
            }
        });

        menuutama.setText("KEMBALI");
        menuutama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuutamaActionPerformed(evt);
            }
        });

        carikendaraan.setText("CARI");
        carikendaraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carikendaraanActionPerformed(evt);
            }
        });

        tabelmember.setText("TAMPILKAN DATA MEMBER");
        tabelmember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabelmemberActionPerformed(evt);
            }
        });

        simpan.setText("SIMPAN");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabelsewa2, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                    .addComponent(tabelsewa, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel8)
                        .addGap(57, 57, 57)
                        .addComponent(kode3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(carikendaraan)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(kode, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(carimember)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tabelmember))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(simpan)
                                .addGap(45, 45, 45)
                                .addComponent(menuutama, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addComponent(jLabel1)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carimember)
                    .addComponent(tabelmember)
                    .addComponent(kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132)
                .addComponent(tabelsewa, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kode3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(carikendaraan))
                    .addComponent(jLabel8))
                .addGap(17, 17, 17)
                .addComponent(tabelsewa2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpan)
                    .addComponent(menuutama))
                .addGap(38, 38, 38))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(365, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_kodeActionPerformed

    private void carimemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carimemberActionPerformed
        try {
            Statement st = (Statement) Lconnection.createStatement();
            ResultSet rs = st.executeQuery("Select * from datamember" +
                    " where kode='" + kode.getText() + "'");
            if (rs.next()) {


                kode.setText(rs.getString("kode"));
                kode2.setText(rs.getString("kode"));
                nama.setText(rs.getString("nama"));
                alamat.setText(rs.getString("alamat"));


            } else {
                ShowMember show = new ShowMember();
                show.setVisible(true);
                //dispose();
            }
        } catch (SQLException e){
            System.out.println("koneksi gagal " + e.toString());

        }

        tampilTabel();        // TODO add your handling code here:
}//GEN-LAST:event_carimemberActionPerformed

    private void menuutamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuutamaActionPerformed
        dispose();
        // TODO add your handling code here:
}//GEN-LAST:event_menuutamaActionPerformed

    private void carikendaraanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carikendaraanActionPerformed
tampilTabel2();
        try {
            Statement st = (Statement) Lconnection.createStatement();
            ResultSet rs = st.executeQuery("Select biayaovertime from datasewa" +
             " where kodekend ='" + kode3.getText()+"' AND kode='"+kode.getText()+"'" );
            if (rs.next()) {
                subTotal += Integer.parseInt(rs.getString("biayaovertime"));
                 //total.setText(""+subTotal);
            
            } else {
                JOptionPane.showMessageDialog(this,"Kode: Salah", "Informasi",
                        JOptionPane.INFORMATION_MESSAGE);
            kode3.setText("");

            }
        } catch (SQLException e){
            System.out.println("koneksi gagal " + e.toString());

        }



// TODO add your handling code here:
    }//GEN-LAST:event_carikendaraanActionPerformed

    private void tabelmemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelmemberActionPerformed
        // TODO add your handling code here:
        ShowMember show = new ShowMember();
        show.setVisible(true);
    }//GEN-LAST:event_tabelmemberActionPerformed

    public void koneksi(){
 
try{
 
Class.forName("com.mysql.jdbc.Driver");
 
conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/rentalkendaraan","root","");
 
cn = conn.createStatement();
 
}catch (Exception e){
 
JOptionPane.showMessageDialog(this,"koneksi gagal..",
 
"Error",JOptionPane.ERROR_MESSAGE);
 
System.out.println(e.getMessage());
 
}
 
}
    
    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
    try{
 
koneksi();
 
String sql = "delete from datasewa where kodekend='"+kode3.getText() +"' && kode='"+kode.getText() +"'";
 
cn.executeUpdate(sql);
 
conn.close();
 
JOptionPane.showMessageDialog(null,"Data berhasil di update");
 
}catch (Exception e){
 
JOptionPane.showMessageDialog(null,"Proses hapus gagal/koneksi gagal..");
 
System.out.println(e.getMessage());
 
}

        
    }//GEN-LAST:event_simpanActionPerformed

    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kembali().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alamat;
    private javax.swing.JButton carikendaraan;
    private javax.swing.JButton carimember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField kode;
    private javax.swing.JLabel kode2;
    private javax.swing.JTextField kode3;
    private javax.swing.JButton menuutama;
    private javax.swing.JLabel nama;
    private javax.swing.JButton simpan;
    private javax.swing.JButton tabelmember;
    private javax.swing.JScrollPane tabelsewa;
    private javax.swing.JScrollPane tabelsewa2;
    // End of variables declaration//GEN-END:variables
private Object[][] getData(){

        String user="root";
        String pswd ="";
        String host="localhost";
        String db="rentalkendaraan";
        String url="";

        Object[][] data1= null;

        try {
            Class.forName("com.mysql.jdbc.Driver");

            url="jdbc:mysql://"+ host +"/"+ db + "?user=" + user + "&password="+ pswd;
            Connection conn=DriverManager.getConnection(url);

            Statement st = conn.createStatement();

            ResultSet rs = st.executeQuery("Select kodekend,jenis from datasewa" +
                    " where kode='" + kode.getText() + "'");

            rs.last();
            int rowCount= rs.getRow();
            rs.beforeFirst();

            data1= new Object[rowCount][4];
            int no=-1;
            while (rs.next()) {
                no=no+1;
                data1[no][0]=rs.getString("kodekend");
                data1[no][1]=rs.getString("jenis");
                data1[no][2]=rs.getString("kodekend");
                data1[no][3]=rs.getString("jenis");

            }

          st.close();
          conn.close();

       }

       catch(ClassNotFoundException e) {
            System.out.println("jdbc.Driver tidak ditemukan");
       }

       catch (SQLException e){
            System.out.println("koneksi gagal " + e.toString());

       }

        return data1;
    }

    private void tampilTabel() {

        String[] columnNames = {"Kode Kendaraan","Nama Mobil"};

        JTable table = new JTable(getData(), columnNames);

        tabelsewa.setViewportView(table);
    }
    
private Object[][] getData2(){

        String user="root";
        String pswd ="";
        String host="localhost";
        String db="rentalkendaraan";
        String url="";

        Object[][] data1= null;

        try {
            Class.forName("com.mysql.jdbc.Driver");

            url="jdbc:mysql://"+ host +"/"+ db + "?user=" + user + "&password="+ pswd;
            Connection conn=DriverManager.getConnection(url);

            Statement st = conn.createStatement();

            ResultSet rs = st.executeQuery("Select kodekend,jenis,waktusewa,biaya,jumlahovertime,biayaovertime"
                    + " from datasewa" +
                    " where kodekend ='" + kode3.getText()+"' AND kode='"+kode.getText()+"'" );

            rs.last();
            int rowCount= rs.getRow();
            rs.beforeFirst();

            data1= new Object[rowCount][6];
            int no=-1;
            while (rs.next()) {
                no=no+1;
                data1[no][0]=rs.getString("kodekend");
                data1[no][1]=rs.getString("jenis");
                data1[no][2]=rs.getString("waktusewa");
                data1[no][3]=rs.getString("biaya");
                data1[no][4]=rs.getString("jumlahovertime");
                data1[no][5]=rs.getString("biayaovertime");
            }

          st.close();
          conn.close();

       }

       catch(ClassNotFoundException e) {
            System.out.println("jdbc.Driver tidak ditemukan");
       }

       catch (SQLException e){
            System.out.println("koneksi gagal " + e.toString());

       }

        return data1;
    }

    private void tampilTabel2() {

        String[] columnNames = {"Kode Kendaraan","Nama Mobil","Waktu Sewa","Biaya Sewa","JumlahOvertime","Biaya Overtime"};

        JTable table = new JTable(getData2(), columnNames);

        tabelsewa2.setViewportView(table);
    }

    private Connection connect() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
